apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: sart-agent
    component: agent
  name: sartd-agent
  namespace: system
spec:
  selector:
    matchLabels:
      app: sart-agent
      component: agent
  template:
    metadata:
      annotations:
        prometheus.io/port: "7472"
        prometheus.io/scrape: "true"
      labels:
        app: sart-agent
        component: agent
    spec:
      containers:
        - command: ["sartd"]
          args:
            - agent
          env:
            - name: SARTD_BGP_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: sart:dev
          imagePullPolicy: IfNotPresent
          name: agent
          securityContext:
            privileged: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 128Mi
          volumeMounts:
          - mountPath: /etc/sartd/cert
            name: cert
            readOnly: true
      hostNetwork: true
      hostPID: true
      nodeSelector:
        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 2
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoSchedule
          operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: sart-webhook-server-cert
      serviceAccountName: sart
