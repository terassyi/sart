apiVersion: v1
kind: Namespace
metadata:
  name: test
  labels:
    name: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-cluster
  namespace: test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-cluster
  template:
    metadata:
      labels:
        app: app-cluster
    spec:
      containers:
        - name: app
          image: ghcr.io/terassyi/test-server:0.1.2
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-local
  namespace: test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-local
  template:
    metadata:
      labels:
        app: app-local
    spec:
      containers:
        - name: app
          image: ghcr.io/terassyi/test-server:0.1.2
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-cluster2
  namespace: test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-cluster2
  template:
    metadata:
      labels:
        app: app-cluster2
    spec:
      containers:
        - name: app
          image: ghcr.io/terassyi/test-server:0.1.2
          ports:
            - containerPort: 80
---
# LoadBalancer Service
apiVersion: v1
kind: Service
metadata:
  name: app-svc-cluster
  namespace: test
  annotations:
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  selector:
    app: app-cluster
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
# LoadBalancer Service
apiVersion: v1
kind: Service
metadata:
  name: app-svc-local
  namespace: test
  annotations:
    sart.terassyi.net/addresspool: default-lb-pool
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: app-local
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
# LoadBalancer Service
apiVersion: v1
kind: Service
metadata:
  name: app-svc-cluster2
  namespace: test
  annotations:
    sart.terassyi.net/addresspool: non-default-lb-pool
    sart.terassyi.net/loadBalancerIPs: "10.0.100.20"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  selector:
    app: app-cluster2
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: curl
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ["sleep", "infinity"]
