name: Release
on:
  push:
    tags:
      - "v*"
defaults:
  run:
    working-directory: .
env:
  go-version: "1.20.1"
  cache-version: 1
jobs:
  sart-image:
    name: Push sart container image
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64/v8
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Tag
        id: set-tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT # Remove "v" prefix.
      - name: Build and Push sartd
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ghcr.io/terassyi/sart:${{ steps.set-tag.outputs.RELEASE_TAG }}
  sart-controller-image:
    name: Push sart-controller container image
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go-version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64/v8
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v3
        with:
          path: |
            controller/
          key: cache-${{ env.cache-version }}-go-${{ env.go-version }}-${{ hashFiles('controller/Makefile') }}
      - run: make setup
        if: steps.cache-tools.outputs.cache-hit != 'true'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Tag
        id: set-tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT # Remove "v" prefix.
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./controller
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ghcr.io/terassyi/sart-controller:${{ steps.set-tag.outputs.RELEASE_TAG }}
  release:
    name: Release on GitHub
    needs:
      - sart-image
      - sart-controller-image
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Kustomize build
        uses: karancode/kustomize-github-action@master
        with:
          kustomize_version: '5.0.1'
          kustomize_build_dir: controller/config/release
          kustomize_comment: false
          kustomize_output_file: ./sart-controller.yaml
      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release v${{ github.ref }}
          body_path: ${{ github.workspace }}-CHANGELOG.md
          files: sart-controller.yaml
