name: ci
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.17.0"
      - uses: actions/checkout@v3
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: setup-dev
        run: make setup-dev
      - name: Setup grpc
        run: make setup-grpc
      - name: Fmt
        run: make fmt
      - name: Build
        run: make build
      - name: Build and Export
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.dev
          tags: sart:dev
          outputs: type=docker,dest=/tmp/devimage.tar
      - name: Upload the dev image
        uses: actions/upload-artifact@v3
        with:
          name: devimage
          path: /tmp/devimage.tar
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.17.0"
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: devimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/devimage.tar
          docker image ls -a
      - name: setup-dev
        run: make setup-dev
      - name: Setup grpc
        run: make setup-grpc
      - name: Run unit tests
        run: make unit-test
      - name: Run sart container
        run: |
          docker run --rm --name sartd-test --privileged -d sart:dev tail -f /dev/null
          sleep 1
          docker ps
          docker exec -d sart bgp global set --asn 65000 --router-id 1.1.1.1
          sleep 10
          docker logs sartd-test
          docker rm -f sartd-test
      - name: Run e2e test
        continue-on-error: true
        run: make e2e-test
      - name: Read syslog grep dockerd
        continue-on-error: true
        run: |
          sudo journalctl --no-pager -u docker.service
